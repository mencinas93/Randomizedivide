import random

def randomized_select(A, low, high, i):
    print(f"Finding the {i}-th smallest element of", A[low:high+1])
    if low == high:
        print("Done: only one element left.")
        return A[low]

    # Partition the array around a random pivot
    pivot_index = randomized_partition(A, low, high)
    print("The randomly chosen pivot is", A[pivot_index], f". After partition:", A[low:high+1])

    # Determine the rank of the pivot
    pivot_rank = pivot_index - low + 1

    if i == pivot_rank:
        print(f"Done: Lucky! The pivot has the required rank {i}.")
        return A[pivot_index]
    elif i < pivot_rank:
        return randomized_select(A, low, pivot_index - 1, i)
    else:
        return randomized_select(A, pivot_index + 1, high, i - pivot_rank)

def randomized_partition(A, low, high):
    # Choose a random pivot and swap it with the first element
    random_index = random.randint(low, high)
    A[low], A[random_index] = A[random_index], A[low]

    pivot = A[low]

    # Partition the array similar to the quicksort algorithm
    i = low
    for j in range(low + 1, high + 1):
        if A[j] <= pivot:
            i += 1
            A[i], A[j] = A[j], A[i]

    A[low], A[i] = A[i], A[low]

    return i
